services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:1.103.2
    ports:
      - ${N8N_PORT:-5678}:5678
    depends_on:
      - db
      - gowa
    env_file: .env
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: db
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: ${DB_USER:-automation}
      DB_POSTGRESDB_PASSWORD: ${DB_PASS:-password}
      DB_POSTGRESDB_DATABASE: ${DB_NAME:-automation}
      DB_POSTGRESDB_SCHEMA: n8n

      N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: true
      N8N_HOST: ${N8N_DOMAIN:-localhost}
      N8N_PROTOCOL: https

      NODE_ENV: ${APP_ENV:-production}
      GENERIC_TIMEZONE: ${APP_TIMEZONE}
      TZ: ${APP_TIMEZONE}

      WEBHOOK_URL: http://n8n:5678/
      # WEBHOOK_URL: https://${N8N_DOMAIN}/
    volumes:
      - ./volumes/n8n/home:/home/node/.n8n
      - ./volumes/n8n/files:/files
    healthcheck:
      test: wget --server-response --proxy off --no-verbose --tries=1 --timeout=3 127.0.0.1:5678/healthz -O /dev/null 2>&1 | grep -q 'HTTP/1.1 200 OK'
      timeout: 5s
      retries: 3

  gowa:
    image: aldinokemal2104/go-whatsapp-web-multidevice:v7.3.1
    ports:
      - ${GOWA_PORT:-3000}:3000
    depends_on:
      - db
    env_file: .env
    environment:
      APP_BASIC_AUTH: ${GOWA_USER:-automation}:${GOWA_PASS:-password}
      APP_PORT: 3000
      APP_DEBUG: true
      APP_OS: Chrome
      APP_ACCOUNT_VALIDATION: false
      # DB_URI: postgres://${DB_USER:-automation}:${DB_PASS:-password}@db/${DB_NAME:-automation}?ssl=false&currentSchema=gowa

      WHATSAPP_WEBHOOK: ${GOWA_WEBHOOK}
    volumes:
      - ./volumes/whatsapp:/app/storages
    healthcheck:
      test: wget --server-response --proxy off --no-verbose --tries=1 --timeout=3 127.0.0.1:3000 -O /dev/null 2>&1 | grep -q 'HTTP/1.1 200 OK'
      timeout: 5s
      retries: 3

  db:
    image: pgvector/pgvector:pg14
    ports:
      - ${DB_PORT:-5432}:5432
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER:-automation}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
      POSTGRES_DB: ${DB_NAME:-automation}
      # POSTGRES_NON_ROOT_USER:
      # POSTGRES_NON_ROOT_PASSWORD:
    volumes:
      - ./volumes/pgvector:/var/lib/postgresql/data
      - ./volumes/init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: [CMD, pg_isready, -q, -d, '${DB_NAME}', -U, '${DB_USER}']
      retries: 3
      timeout: 5s

  pgadmin:
    image: dpage/pgadmin4:9.6.0
    ports:
      - ${PGADMIN_PORT:-8080}:8080
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: 8080
      PGADMIN_REPLACE_SERVERS_ON_STARTUP: true
    volumes:
      - ./volumes/pgadmin/servers.json:/pgadmin4/servers.json

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    ports:
      - ${MINIO_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./volumes/minio:/data
    command: minio server /data --console-address ":9001"
    healthcheck:
      test: [CMD, mc, ready, local]
      timeout: 5s
      retries: 3

networks:
  default:
    name: automation
    enable_ipv6: false
